
package snake_2.gui;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import snake_2.Record;

/**
 *
 * @author YARUS
 */
public class RecordsFrame extends javax.swing.JDialog implements Serializable{
    
    private ArrayList<Record> records = new ArrayList<Record>();
    
    /**
     * Creates new form RecordsFrame
     */
    public RecordsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "â„–", "Names", "Bals"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        save();        
    }//GEN-LAST:event_formWindowClosed

    public void addRecord(Record r){
        if(records.isEmpty())
            records.add(r);
        else{
            Record t = null;
            int i;
            for(i = 0; i<records.size(); i++ ){
                t = records.get(i);
                if(r.getBal() > t.getBal())
                    break;
            }
            records.add(i, r);           
        }
        
        if(records.size() >= 10){
            Record tmp = null;
            for(Record tmp2: records){
                tmp = tmp2;
            }
            records.remove(tmp);
        }
        save();    
        update();
    }  
    
    public void update(){
        for(int i = 0; i<records.size(); i++){
            jTable1.setValueAt(i+1, i, 0);
        }
        
        for(int i = 0; i<records.size(); i++){
            jTable1.setValueAt(records.get(i).getName(), i, 1);
        }
        
        for(int i = 0; i<records.size(); i++){
            jTable1.setValueAt(records.get(i).getBal(), i, 2);
        }
        jTable1.updateUI();
        for(Record rr: records){
            System.out.println(rr.getName());
        }
    }
    
    
    public void save(){
        String path = "records.txt";
        FileOutputStream fos = null;
        ObjectOutputStream oos = null;
        try {
            fos = new FileOutputStream(path);
            oos = new ObjectOutputStream(fos);
            oos.writeObject(records);
            oos.flush();            
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            try {
                if(oos != null)
                    oos.close();
                if(fos != null)
                    fos.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }        
    }
    
    public void load(){
        String path = "records.txt";
        FileInputStream fis = null;
        ObjectInputStream oin = null;
        try {
            fis = new FileInputStream(path);
            oin = new ObjectInputStream(fis);
            records = (ArrayList<Record>) oin.readObject();            
        } catch (IOException | ClassNotFoundException ex) {
            ex.printStackTrace();
        } finally {
            try {
                if(oin != null)
                    oin.close();
                if(fis != null)
                    fis.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        update();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
